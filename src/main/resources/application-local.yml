spring:
  #@EnableBatchProcessing 사용하면 커스텀 한걸로 판단하고 일부 설정이 초기화된다.
  batch:
    jdbc:
      initialize-schema: always
  datasource:
    business:
      url: jdbc:mysql://localhost:3306/artfriendly?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      #url: jdbc:mysql://database-1.cn0mmqiaop3v.ap-northeast-2.rds.amazonaws.com/artfriendly?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      driver-class-name: com.mysql.cj.jdbc.Driver

    second-datasource:
      url: jdbc:mysql://localhost:3306/batch?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      #url: jdbc:mysql://database-1.cn0mmqiaop3v.ap-northeast-2.rds.amazonaws.com/batch?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false

  application:
    name: Crawler
  cloud:
    openfeign:
      client:
        config:
          default:
            connect-timeout: 5000
            read-timeout: 5000

server:
  port: 8090

logging:
  level:
    action.in.blog: DEBUG

# api 연동 관련 설정
exhibition:
  serviceKey: ${API_SERVICE_KEY}
  api: "http://www.culture.go.kr/openapi/rest/publicperformancedisplays"


festival:
  serviceKey: ${API_SERVICE_KEY}
  api: "https://apis.data.go.kr/B551011/KorService1"

